WHITESPACE = _{ " " | "\t" | NEWLINE }
COMMENT = _{ "//" ~ (!"\n" ~ ANY)* }

identifier = @{ ( 'a'..'z' | 'A'..'Z' | "_" ) ~ ( 'a'..'z' | 'A'..'Z' | "_" | '0'..'9' )* }
constant = @{ "-"? ~ (ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*) }

// Atomic and immutable data unit for the IR, a wire
pub_wire = @{ "pub" ~ identifier }
priv_wire = @{ identifier }
wire = { pub_wire | priv_wire }
invocation_inputs = { primary+ }
definition_inputs = { wire+ }
definition_outputs = { "->" ~ wire+ }
signature = { definition_inputs ~ definition_outputs? }
expression_list = { expression* }

alias_definition = { "def" ~ identifier ~ signature ~ "{" ~ expression_list ~ "}" }

// alias invocations need to be surrounded by brackets to distinguish them
// from wire identifiers
alias_invocation = { "(" ~ identifier ~ invocation_inputs ~ ")" }

// binary operations
plus = { "+" }
minus = { "-" }
times = { "*" }
power = { "^" }
equals = { "=" }

op = _{ plus | minus | times | power | equals }

primary = { constant | wire | alias_invocation | "(" ~ expression ~ ")" }

expression = { primary ~ ( op ~ primary )* }

vampir = { SOI ~ ( alias_definition | expression )* ~ EOI }
